package View;

import Model.Blackboard;
import Data.Circle;
import java.awt.*;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.*;
import javax.swing.border.MatteBorder;

/**
 * The {@code DrawPanel} class is a custom {@link JPanel} that visually represents
 * circles stored in the {@link Blackboard}. Each circle is drawn with its respective
 * color, and an outline is added around each circle.
 *
 * This panel is used as part of a graphical interface to display real-time visualizations
 * of the circles generated by the system. It ensures that each circle is displayed with
 * its fill color and a black border.
 */
public class DrawPanel extends JPanel implements PropertyChangeListener {

    /**
     * Constructs a {@code DrawPanel} with a white background and a black border around the panel.
     * The border has a thickness of 3 pixels on all sides.
     */
    public DrawPanel(){
        setBackground(Color.WHITE);
        setBorder(new MatteBorder(3, 3, 3, 3, Color.BLACK));
        Blackboard.getInstance().addChangeSupportListener(
                Blackboard.PROPERTY_NAME_VIEW_DATA, this);
    }

    /**
     * Paints the circles stored in the {@link Blackboard}'s circle list onto the panel.
     *
     * For each circle:
     * <ul>
     *     <li>The fill color is set to the circle's assigned color.</li>
     *     <li>An outline is drawn around the circle using a black border.</li>
     * </ul>
     * The circles are drawn as ovals, and their positions and sizes are determined by the
     * coordinates and radius stored in each {@link Circle} object.
     *
     * @param g the {@link Graphics} object used for drawing the circles and their outlines
     */
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);

        for (Circle c : Blackboard.getInstance().getCircleList()) {
            c.drawCircle(g);
        }
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        repaint();
    }
}
